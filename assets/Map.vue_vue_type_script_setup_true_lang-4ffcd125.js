var O=Object.defineProperty;var _=(r,e,t)=>e in r?O(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var n=(r,e,t)=>(_(r,typeof e!="symbol"?e+"":e,t),t);import{R as h,d as x,w as G,o as I,f as N,h as z}from"./index-a767900d.js";const d=window.TMap;class W{constructor(e,t){n(this,"marker");n(this,"map");n(this,"geometries");this.map=e,this.geometries=[],this.initMarkerData(t)}initMarkerData(e){if(this.marker=new d.MultiMarker({id:(e==null?void 0:e.markerLayerId)??"marker-layer",map:this.map}),e)for(const t in e)this.update(e[t]);this.geometries=this.marker.geometries}update(e){const t=e.name||e.id;this.marker.styles.hasOwnProperty(t)||this.setStyle(e,t),this.marker.updateGeometries([{...e,position:new d.LatLng(e.position[1],e.position[0]),content:e.name.length>7?e.name.substring(0,7)+"...":e.name}])}setStyle(e,t){const c=this.marker.styles.default,s={anchor:{x:17,y:23},size:18,direction:"bottom",offset:{x:0,y:0},strokeColor:"#65BBE0",strokeWidth:100,...e},i=new d.MarkerStyle({src:h(e==null?void 0:e.icon)??c.src,width:42,height:48,color:"#fff",...s});this.marker.styles[t]=i}remove(e){e&&(this.marker.remove([e]),this.geometries=this.marker.geometries)}reset(){this.marker&&this.marker.setMap(null),this.marker=null,this.geometries=[]}}const v=window.TMap;class $ extends v.DOMOverlay{constructor(t){super(t);n(this,"content");n(this,"map");n(this,"position");this.map=t.map,this.content=t.content,this.position=t.position}onInit(t){this.content=t.content,this.position=t.position}onDestroy(){this.dom.removeEventListener("touchend",this.onTouchend),this.dom.removeEventListener("click",this.onClick),this.removeAllListeners()}onClick(){this.emit("click")}onTouchend(){this.emit("touchend")}createDOM(){const t=document.createElement("div");return t.classList.add("clusterBubble"),t.innerText=this.content,t.style.cssText=["width: 46px;","height: 52px;","line-height: 46px;"].join(" "),this.onClick=this.onClick.bind(this),t.addEventListener("click",this.onClick),this.onTouchend=this.onTouchend.bind(this),t.addEventListener("touchend",this.onTouchend),t}updateDOM(){if(!this.map)return;const t=this.map.projectToContainer(this.position),c=t.getX()-this.dom.clientWidth/2+"px",s=t.getY()-this.dom.clientHeight/2+"px";this.dom.style.transform=`translate(${c}, ${s})`,this.emit("dom_updated")}}const w=window.TMap;class A{constructor(e,t){n(this,"markerCluster");n(this,"map");n(this,"geometries");n(this,"clusterBubbleList");n(this,"markerGeometries");n(this,"marker");this.map=e,this.marker=t,this.geometries=[],this.clusterBubbleList=[],this.markerGeometries=[],this.initMarkerData(t.geometries)}initMarkerData(e){for(const t in e)this.geometries.push({...e[t],position:new w.LatLng(e[t].position.lat,e[t].position.lng)});this.markerCluster=new w.MarkerCluster({id:"markerCluster-layer",map:this.map,geometries:this.geometries,enableDefaultStyle:!1,minimumClusterSize:3,zoomOnClick:!0,gridSize:90,averageCenter:!1}),this.markerCluster.on("cluster_changed",()=>{var c;this.clusterBubbleList.length&&(this.clusterBubbleList.forEach(function(s){s.destroy()}),this.clusterBubbleList=[]),this.markerGeometries=[];const t=(c=this.markerCluster)==null?void 0:c.getClusters();t&&t.forEach(s=>{if(s.geometries.length>2){const i=new $({map:this.map,position:s.center,content:s.geometries.length});i.on("click",()=>{this.map.fitBounds(s.bounds)}),i.on("touchend",()=>{this.map.fitBounds(s.bounds)}),this.clusterBubbleList.push(i)}else this.markerGeometries.push({...s.geometries[0],styleId:s.geometries[0].name})}),this.marker&&this.marker.marker.setGeometries(this.markerGeometries)})}reset(){this.markerCluster&&this.markerCluster.setMap(null),this.markerCluster=null,this.clusterBubbleList.forEach(e=>{e.setMap(null)}),this.clusterBubbleList=[],this.geometries=[],this.marker=null,this.markerGeometries=[]}}const p={};function H(r,e){const t=new W(r,e??""),c=new A(r,t??"");return p.marker=t,p.markerCluster=c,p}const R=r=>{r.marker.reset(),r.markerCluster.reset()},P={class:"w-screen h-screen",id:"container"},U=x({__name:"Map",props:{marker:{},type:{default:"resource"}},emits:["markerHandel"],setup(r,{emit:e}){const t=r,c=e,s=window.TMap;let i,l,m;const L={resource:{center:[28.895863,111.879582],zoom:11,img:"handDrawing/resource.png",imageSW:[28.607333019835735,111.68350178930609],imageNE:[29.14713394652845,112.31232510576615]},specialTrain:{center:[28.789483,111.928793],zoom:14.5,img:"handDrawing/park.png",imageSW:[28.762054577351662,111.9080378373178],imageNE:[28.805162279243536,111.9734938866169]}};G(()=>t.marker,o=>{E(),g(o),D(t.type)});const b=async()=>{window.map=i=new s.Map("container",{renderOptions:{enableBloom:!0},baseMap:{type:"vector",features:["base","point","label","arrow","building"]},mapStyleId:"style1",viewMode:"2D"}),i.removeControl(s.constants.DEFAULT_CONTROL_ID.ZOOM),i.removeControl(s.constants.DEFAULT_CONTROL_ID.ROTATION);const o=`url(${h("logo.ico")}),auto`;i.setCursorStyle(o),g("")},{business:f,travel:M,industry:y,mining:C,other:T}=window.data.marker,B=[...f,...M,...y,...C,...T],g=o=>{window.searchList=o||B,l=H(i,o||window.searchList);const{marker:a}=l;a.marker.on("click",function(u){c("markerHandel",u.geometry)})},D=(o="resource")=>{o=o==="specialTrain"?o:"resource";const a=L[o],u=new s.LatLng(a.imageSW[0],a.imageSW[1]),S=new s.LatLng(a.imageNE[0],a.imageNE[1]),k=new s.LatLngBounds(u,S);m?(m.setBounds(k),m.setSrc(h(a.img))):window.imageGroundLayer=m=new s.ImageGroundLayer({map:i,src:h(a.img),bounds:k}),i.setCenter(new s.LatLng(a.center[0],a.center[1])),i.setZoom(a.zoom)},E=()=>{R(l)};return I(()=>{b()}),(o,a)=>(N(),z("div",P))}});export{U as _};
